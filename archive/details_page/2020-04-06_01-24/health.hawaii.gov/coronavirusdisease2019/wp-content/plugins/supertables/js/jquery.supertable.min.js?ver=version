/*
** Supertable v0.3
**
** For Hawaii Information Consortium
*/

(function($, window) {



  function updateCheck(table){


      table.closest('.table-wrapper').find('.table-menu input').each(function(i){
        var val = $(this).val(),
            col = table.find('th').eq(val -1);

        if(table.fnSettings().aoColumns[i].bVisible){
          $(this).attr('checked','checked');
        } else {
          $(this).removeAttr('checked');
        }

     });

  }


  function fnShowHide( iCol, table, hide ) {

    var oTable = table.dataTable(),
      bVis = oTable.fnSettings().aoColumns[iCol].bVisible;
    if(hide === 'hide'){
      oTable.fnSetColumnVis( iCol, false );
    }else if(hide === 'show'){
      oTable.fnSetColumnVis( iCol, true );
    } 

    // fix dumb datatable inline width
    table.css('width','');
    updateCheck(table);

  }

  function randomString(num) {
    var chars = "abcdefghiklmnopqrstuvwxyz",
      string_length = num,
      randomstring = '',
      i, 
      rnum;

    for (i=0; i<string_length; i+=1) {
      rnum = Math.floor(Math.random() * chars.length);
      randomstring += chars.substring(rnum,rnum+1);
    }
    return randomstring;
  }


  function superModal(el){

    var modal = $('.super-modal');

    if(modal.length === 0){
      $('<div class="super-modal"></div>').hide().prependTo('body');
      modal = $('.super-modal');
    } 

    modal.css('opacity','.4');

     modal.fadeIn().click(function(){
        el.slideUp();
        $(this).fadeOut();
      });
   }


  function filament(table){

      var thead = table.find("thead"),
          headers = thead.find("th"),
          container = table.closest('.table-wrapper').find('.table-menu');

      headers.each(function(i){
         var th = $(this),
              thIndex = th.index(),
              ran = randomString(6),
              toggle = $('<li><input type="checkbox" name="toggle-cols" id="'+ran+'" value="'+thIndex+'" /> <label for="'+ran+'">'+th.text()+'</label></li>');
           
           container.find("ul").append(toggle);         
           
           toggle.find("input").change(function(){ 
              var input = $(this), 
              val = input.val();

              if($(this).is(':checked')){
                fnShowHide(val,table,'show');
              } else {
                fnShowHide(val,table,'hide');
              }
            });  
          
      });
  }


  function setUpHeader($item,settings){
    
    var $wrapper;

     // add enhanced class to table for rwd-tables and a class of table-wrapper
     $item.addClass('enhanced').wrap('<div class="table-wrapper" />');
     $wrapper = $item.closest('.table-wrapper');

     var tableSettings = $.extend({
      "bSort": true,
      "sDom": "<'clearfix'<'length-div'l><f>r>t<<'pull-left'i><'pager pull-right'p>>",
      "oLanguage": { "sSearch": "", "sLengthMenu": "_MENU_ records per page"}
     }, settings.dataTableSettings);

     // call datatable script
     $item.dataTable(tableSettings);

     // prepend the table nav buttons
     $('<div class="table-nav">\
           <ul class="unstyled horizontal clearfix">\
              <li><a href="#" class="btn ' + settings.buttonClasses + ' table-menu-length"><i class="' + settings.lengthIconClasses + '"></i></a></li>\
              <li><a href="#" class="btn ' + settings.buttonClasses + ' table-menu-toggle table-menu-btn"><i class="' + settings.columnIconClasses + '"></i></a>\
                 <div class="table-menu"><ul class="unstyled" /></div>\
              </li>\
           </ul>\
        </div>').prependTo($wrapper);

     // should probably use a placeholder polyfill, maybe (haha): https://github.com/coreyrothwell/Vanilla-HTML5-Placeholder-Fix-for-IE 
     $('.dataTables_filter input').attr('placeholder','Filter...');

     $wrapper.find('.table-menu-toggle').click(function(e){
        var el = $(this);
        e.preventDefault();
        el.next('.table-menu').slideToggle('fast');
        superModal(el.next('.table-menu'));
     });

     $wrapper.find('.table-menu-length').click(function(e){
        var el = $(this),
          lendiv = el.closest('.table-wrapper').find('.length-div');
        lendiv.slideToggle('fast');
        superModal(lendiv);
        e.preventDefault();
     });


     // set default breakpoints
     if( isEmpty(settings.breakPoints) ) {

        var breakers = {
              mobile: 480,
              tablet: 970
          
          }, 
          heads = [],
          count = 0;


        $item.find('thead th').each(function(){
          if(count <= 2){
            $(this).addClass('mobile tablet');
            heads.push($(this).index());
          } else if (count <= 4){
            $(this).addClass('tablet');
            heads.push($(this).index());
          }
          count++;
        });

      }


  }

  function isEmpty(map) {
     for(var key in map) {
        if (map.hasOwnProperty(key)) {
           return false;
         }
     }
     return true;
  }


  function responder($item,settings){

      var win = $(window),
              bps = settings.breakPoints,
              i,
              key,
              th,
              heads;

      // set default breakpoints
      if(isEmpty(settings.breakPoints)){
        bps = {
              mobile: 480,
              tablet: 970
          
          };
      }

      for (key in bps) {

        if (bps.hasOwnProperty(key)) {

          th = $item.find('thead th').not('.' + key);
          heads = [];
              
          th.each(function(){
            heads.push($(this).index());
          });

          for(i=0; i < heads.length; i+=1 ){
            fnShowHide(heads[i],$item, (win.width() <= bps[key]) ? 'hide' : 'show');
          }

          updateCheck($item);

       } 
       

      } // object property loop



    }




    $.fn.supertable = function(options){

      var settings = $.extend( {
        'lengthIconClasses': 'icon-resize-full icon-white',
        'columnIconClasses': 'icon-white icon-list',
        'buttonClassses': 'btn-inverse',
        'breakPoints': {},
        'dataTableSettings': {}
      }, options),
      $item = this;

      $item.each(function(){
        var $table = $(this);

        if($table.find('thead').length > 0 ){

          setUpHeader($table,settings);
          filament($table);
          responder($table,settings);

          $(window).resize(function(){
            responder($table,settings);
          });

        } 

      });

    };

}(jQuery, this));